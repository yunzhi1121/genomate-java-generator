/**
 * generated by Xtext 2.38.0
 */
package com.yunzhi.genoMate;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Lombok Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.yunzhi.genoMate.GenoMatePackage#getLombokType()
 * @model
 * @generated
 */
public enum LombokType implements Enumerator
{
  /**
   * The '<em><b>Accessors</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ACCESSORS_VALUE
   * @generated
   * @ordered
   */
  ACCESSORS(0, "Accessors", "Accessors"),

  /**
   * The '<em><b>All Args Constructor</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ALL_ARGS_CONSTRUCTOR_VALUE
   * @generated
   * @ordered
   */
  ALL_ARGS_CONSTRUCTOR(1, "AllArgsConstructor", "AllArgsConstructor"),

  /**
   * The '<em><b>Builder</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BUILDER_VALUE
   * @generated
   * @ordered
   */
  BUILDER(2, "Builder", "Builder"),

  /**
   * The '<em><b>Data</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATA_VALUE
   * @generated
   * @ordered
   */
  DATA(3, "Data", "Data"),

  /**
   * The '<em><b>Equals And Hash Code</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EQUALS_AND_HASH_CODE_VALUE
   * @generated
   * @ordered
   */
  EQUALS_AND_HASH_CODE(4, "EqualsAndHashCode", "EqualsAndHashCode"),

  /**
   * The '<em><b>Getter</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GETTER_VALUE
   * @generated
   * @ordered
   */
  GETTER(5, "Getter", "Getter"),

  /**
   * The '<em><b>No Args Constructor</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #NO_ARGS_CONSTRUCTOR_VALUE
   * @generated
   * @ordered
   */
  NO_ARGS_CONSTRUCTOR(6, "NoArgsConstructor", "NoArgsConstructor"),

  /**
   * The '<em><b>Required Args Constructor</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REQUIRED_ARGS_CONSTRUCTOR_VALUE
   * @generated
   * @ordered
   */
  REQUIRED_ARGS_CONSTRUCTOR(7, "RequiredArgsConstructor", "RequiredArgsConstructor"),

  /**
   * The '<em><b>Setter</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SETTER_VALUE
   * @generated
   * @ordered
   */
  SETTER(8, "Setter", "Setter"),

  /**
   * The '<em><b>Singular</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SINGULAR_VALUE
   * @generated
   * @ordered
   */
  SINGULAR(9, "Singular", "Singular"),

  /**
   * The '<em><b>Super Builder</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SUPER_BUILDER_VALUE
   * @generated
   * @ordered
   */
  SUPER_BUILDER(10, "SuperBuilder", "SuperBuilder"),

  /**
   * The '<em><b>To String</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TO_STRING_VALUE
   * @generated
   * @ordered
   */
  TO_STRING(11, "ToString", "ToString");

  /**
   * The '<em><b>Accessors</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ACCESSORS
   * @model name="Accessors"
   * @generated
   * @ordered
   */
  public static final int ACCESSORS_VALUE = 0;

  /**
   * The '<em><b>All Args Constructor</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ALL_ARGS_CONSTRUCTOR
   * @model name="AllArgsConstructor"
   * @generated
   * @ordered
   */
  public static final int ALL_ARGS_CONSTRUCTOR_VALUE = 1;

  /**
   * The '<em><b>Builder</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BUILDER
   * @model name="Builder"
   * @generated
   * @ordered
   */
  public static final int BUILDER_VALUE = 2;

  /**
   * The '<em><b>Data</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATA
   * @model name="Data"
   * @generated
   * @ordered
   */
  public static final int DATA_VALUE = 3;

  /**
   * The '<em><b>Equals And Hash Code</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EQUALS_AND_HASH_CODE
   * @model name="EqualsAndHashCode"
   * @generated
   * @ordered
   */
  public static final int EQUALS_AND_HASH_CODE_VALUE = 4;

  /**
   * The '<em><b>Getter</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GETTER
   * @model name="Getter"
   * @generated
   * @ordered
   */
  public static final int GETTER_VALUE = 5;

  /**
   * The '<em><b>No Args Constructor</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #NO_ARGS_CONSTRUCTOR
   * @model name="NoArgsConstructor"
   * @generated
   * @ordered
   */
  public static final int NO_ARGS_CONSTRUCTOR_VALUE = 6;

  /**
   * The '<em><b>Required Args Constructor</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REQUIRED_ARGS_CONSTRUCTOR
   * @model name="RequiredArgsConstructor"
   * @generated
   * @ordered
   */
  public static final int REQUIRED_ARGS_CONSTRUCTOR_VALUE = 7;

  /**
   * The '<em><b>Setter</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SETTER
   * @model name="Setter"
   * @generated
   * @ordered
   */
  public static final int SETTER_VALUE = 8;

  /**
   * The '<em><b>Singular</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SINGULAR
   * @model name="Singular"
   * @generated
   * @ordered
   */
  public static final int SINGULAR_VALUE = 9;

  /**
   * The '<em><b>Super Builder</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SUPER_BUILDER
   * @model name="SuperBuilder"
   * @generated
   * @ordered
   */
  public static final int SUPER_BUILDER_VALUE = 10;

  /**
   * The '<em><b>To String</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TO_STRING
   * @model name="ToString"
   * @generated
   * @ordered
   */
  public static final int TO_STRING_VALUE = 11;

  /**
   * An array of all the '<em><b>Lombok Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final LombokType[] VALUES_ARRAY =
    new LombokType[]
    {
      ACCESSORS,
      ALL_ARGS_CONSTRUCTOR,
      BUILDER,
      DATA,
      EQUALS_AND_HASH_CODE,
      GETTER,
      NO_ARGS_CONSTRUCTOR,
      REQUIRED_ARGS_CONSTRUCTOR,
      SETTER,
      SINGULAR,
      SUPER_BUILDER,
      TO_STRING,
    };

  /**
   * A public read-only list of all the '<em><b>Lombok Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<LombokType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Lombok Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LombokType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      LombokType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Lombok Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LombokType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      LombokType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Lombok Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static LombokType get(int value)
  {
    switch (value)
    {
      case ACCESSORS_VALUE: return ACCESSORS;
      case ALL_ARGS_CONSTRUCTOR_VALUE: return ALL_ARGS_CONSTRUCTOR;
      case BUILDER_VALUE: return BUILDER;
      case DATA_VALUE: return DATA;
      case EQUALS_AND_HASH_CODE_VALUE: return EQUALS_AND_HASH_CODE;
      case GETTER_VALUE: return GETTER;
      case NO_ARGS_CONSTRUCTOR_VALUE: return NO_ARGS_CONSTRUCTOR;
      case REQUIRED_ARGS_CONSTRUCTOR_VALUE: return REQUIRED_ARGS_CONSTRUCTOR;
      case SETTER_VALUE: return SETTER;
      case SINGULAR_VALUE: return SINGULAR;
      case SUPER_BUILDER_VALUE: return SUPER_BUILDER;
      case TO_STRING_VALUE: return TO_STRING;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private LombokType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //LombokType
