/**
 * generated by Xtext 2.38.0
 */
package com.yunzhi.genoMate.util;

import com.yunzhi.genoMate.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see com.yunzhi.genoMate.GenoMatePackage
 * @generated
 */
public class GenoMateSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static GenoMatePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GenoMateSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = GenoMatePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case GenoMatePackage.GENO_MATE:
      {
        GenoMate genoMate = (GenoMate)theEObject;
        T result = caseGenoMate(genoMate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.GLOBAL_CONFIG:
      {
        GlobalConfig globalConfig = (GlobalConfig)theEObject;
        T result = caseGlobalConfig(globalConfig);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.FIELD:
      {
        Field field = (Field)theEObject;
        T result = caseField(field);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.LOMBOK_ANNOTATION:
      {
        LombokAnnotation lombokAnnotation = (LombokAnnotation)theEObject;
        T result = caseLombokAnnotation(lombokAnnotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.MYBATIS_PLUS_MODEL_ANNOTATION:
      {
        MybatisPlusModelAnnotation mybatisPlusModelAnnotation = (MybatisPlusModelAnnotation)theEObject;
        T result = caseMybatisPlusModelAnnotation(mybatisPlusModelAnnotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.MYBATIS_PLUS_FIELD_ANNOTATION:
      {
        MybatisPlusFieldAnnotation mybatisPlusFieldAnnotation = (MybatisPlusFieldAnnotation)theEObject;
        T result = caseMybatisPlusFieldAnnotation(mybatisPlusFieldAnnotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.BEAN_VALIDATION_ANNOTATION:
      {
        BeanValidationAnnotation beanValidationAnnotation = (BeanValidationAnnotation)theEObject;
        T result = caseBeanValidationAnnotation(beanValidationAnnotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.JACKSON_ANNOTATION:
      {
        JacksonAnnotation jacksonAnnotation = (JacksonAnnotation)theEObject;
        T result = caseJacksonAnnotation(jacksonAnnotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.ANNOTATION_PARAMETERS:
      {
        AnnotationParameters annotationParameters = (AnnotationParameters)theEObject;
        T result = caseAnnotationParameters(annotationParameters);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.PARAMETER:
      {
        Parameter parameter = (Parameter)theEObject;
        T result = caseParameter(parameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.GENERATE_SECTION:
      {
        GenerateSection generateSection = (GenerateSection)theEObject;
        T result = caseGenerateSection(generateSection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.GENERATION_RULE:
      {
        GenerationRule generationRule = (GenerationRule)theEObject;
        T result = caseGenerationRule(generationRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.PO_RULE:
      {
        PoRule poRule = (PoRule)theEObject;
        T result = casePoRule(poRule);
        if (result == null) result = caseGenerationRule(poRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.DTO_RULE:
      {
        DtoRule dtoRule = (DtoRule)theEObject;
        T result = caseDtoRule(dtoRule);
        if (result == null) result = caseGenerationRule(dtoRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.VO_RULE:
      {
        VoRule voRule = (VoRule)theEObject;
        T result = caseVoRule(voRule);
        if (result == null) result = caseGenerationRule(voRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.DTO_DEFINITION:
      {
        DtoDefinition dtoDefinition = (DtoDefinition)theEObject;
        T result = caseDtoDefinition(dtoDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.VO_DEFINITION:
      {
        VoDefinition voDefinition = (VoDefinition)theEObject;
        T result = caseVoDefinition(voDefinition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.FIELD_ANNOTATION:
      {
        FieldAnnotation fieldAnnotation = (FieldAnnotation)theEObject;
        T result = caseFieldAnnotation(fieldAnnotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.FIELD_VALIDATION_BLOCK:
      {
        FieldValidationBlock fieldValidationBlock = (FieldValidationBlock)theEObject;
        T result = caseFieldValidationBlock(fieldValidationBlock);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.SINGLE_ACTION:
      {
        SingleAction singleAction = (SingleAction)theEObject;
        T result = caseSingleAction(singleAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.LOCAL_LOOP_ACTION:
      {
        LocalLoopAction localLoopAction = (LocalLoopAction)theEObject;
        T result = caseLocalLoopAction(localLoopAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.GLOBAL_ACTION:
      {
        GlobalAction globalAction = (GlobalAction)theEObject;
        T result = caseGlobalAction(globalAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.LOCAL_ACTION:
      {
        LocalAction localAction = (LocalAction)theEObject;
        T result = caseLocalAction(localAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.TYPE_CONDITION:
      {
        TypeCondition typeCondition = (TypeCondition)theEObject;
        T result = caseTypeCondition(typeCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.OR_TYPE_CONDITION:
      {
        OrTypeCondition orTypeCondition = (OrTypeCondition)theEObject;
        T result = caseOrTypeCondition(orTypeCondition);
        if (result == null) result = caseTypeCondition(orTypeCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.AND_TYPE_CONDITION:
      {
        AndTypeCondition andTypeCondition = (AndTypeCondition)theEObject;
        T result = caseAndTypeCondition(andTypeCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.TYPE_EQUALITY_CONDITION:
      {
        TypeEqualityCondition typeEqualityCondition = (TypeEqualityCondition)theEObject;
        T result = caseTypeEqualityCondition(typeEqualityCondition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.VARIABLE_DECLARATION:
      {
        VariableDeclaration variableDeclaration = (VariableDeclaration)theEObject;
        T result = caseVariableDeclaration(variableDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.PO_ADD_FIELD:
      {
        PoAddField poAddField = (PoAddField)theEObject;
        T result = casePoAddField(poAddField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.DTO_ADD_FIELD:
      {
        DtoAddField dtoAddField = (DtoAddField)theEObject;
        T result = caseDtoAddField(dtoAddField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.VO_ADD_FIELD:
      {
        VoAddField voAddField = (VoAddField)theEObject;
        T result = caseVoAddField(voAddField);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.EXCLUSIONS:
      {
        Exclusions exclusions = (Exclusions)theEObject;
        T result = caseExclusions(exclusions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.DTO_VALIDATION:
      {
        DtoValidation dtoValidation = (DtoValidation)theEObject;
        T result = caseDtoValidation(dtoValidation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.VO_JACKSON:
      {
        VoJackson voJackson = (VoJackson)theEObject;
        T result = caseVoJackson(voJackson);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.PROPERTY_DECLARATION:
      {
        PropertyDeclaration propertyDeclaration = (PropertyDeclaration)theEObject;
        T result = casePropertyDeclaration(propertyDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.MAPPING:
      {
        Mapping mapping = (Mapping)theEObject;
        T result = caseMapping(mapping);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.MODEL_TO_VO_MAPPING:
      {
        ModelToVOMapping modelToVOMapping = (ModelToVOMapping)theEObject;
        T result = caseModelToVOMapping(modelToVOMapping);
        if (result == null) result = caseMapping(modelToVOMapping);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.DTO_TO_MODEL_MAPPING:
      {
        DTOToModelMapping dtoToModelMapping = (DTOToModelMapping)theEObject;
        T result = caseDTOToModelMapping(dtoToModelMapping);
        if (result == null) result = caseMapping(dtoToModelMapping);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.MAPPING_RULE:
      {
        MappingRule mappingRule = (MappingRule)theEObject;
        T result = caseMappingRule(mappingRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.TYPE:
      {
        Type type = (Type)theEObject;
        T result = caseType(type);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.SIMPLE_TYPE:
      {
        SimpleType simpleType = (SimpleType)theEObject;
        T result = caseSimpleType(simpleType);
        if (result == null) result = caseType(simpleType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.NORMAL_TYPE:
      {
        NormalType normalType = (NormalType)theEObject;
        T result = caseNormalType(normalType);
        if (result == null) result = caseType(normalType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.GENERIC_DATA_TYPE:
      {
        GenericDataType genericDataType = (GenericDataType)theEObject;
        T result = caseGenericDataType(genericDataType);
        if (result == null) result = caseType(genericDataType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GenoMatePackage.ARRAY_TYPE:
      {
        ArrayType arrayType = (ArrayType)theEObject;
        T result = caseArrayType(arrayType);
        if (result == null) result = caseType(arrayType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Geno Mate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Geno Mate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGenoMate(GenoMate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Config</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Config</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalConfig(GlobalConfig object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseField(Field object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Lombok Annotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Lombok Annotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLombokAnnotation(LombokAnnotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mybatis Plus Model Annotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mybatis Plus Model Annotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMybatisPlusModelAnnotation(MybatisPlusModelAnnotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mybatis Plus Field Annotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mybatis Plus Field Annotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMybatisPlusFieldAnnotation(MybatisPlusFieldAnnotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bean Validation Annotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bean Validation Annotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBeanValidationAnnotation(BeanValidationAnnotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Jackson Annotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Jackson Annotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJacksonAnnotation(JacksonAnnotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Annotation Parameters</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Annotation Parameters</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAnnotationParameters(AnnotationParameters object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParameter(Parameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Generate Section</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Generate Section</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGenerateSection(GenerateSection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Generation Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Generation Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGenerationRule(GenerationRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Po Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Po Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePoRule(PoRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dto Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dto Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDtoRule(DtoRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vo Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vo Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVoRule(VoRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dto Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dto Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDtoDefinition(DtoDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vo Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vo Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVoDefinition(VoDefinition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field Annotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field Annotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFieldAnnotation(FieldAnnotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field Validation Block</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field Validation Block</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFieldValidationBlock(FieldValidationBlock object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Single Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Single Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSingleAction(SingleAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Local Loop Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Local Loop Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocalLoopAction(LocalLoopAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalAction(GlobalAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Local Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Local Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocalAction(LocalAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTypeCondition(TypeCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Or Type Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Or Type Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOrTypeCondition(OrTypeCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>And Type Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>And Type Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAndTypeCondition(AndTypeCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type Equality Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type Equality Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTypeEqualityCondition(TypeEqualityCondition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariableDeclaration(VariableDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Po Add Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Po Add Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePoAddField(PoAddField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dto Add Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dto Add Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDtoAddField(DtoAddField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vo Add Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vo Add Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVoAddField(VoAddField object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Exclusions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Exclusions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExclusions(Exclusions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dto Validation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dto Validation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDtoValidation(DtoValidation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vo Jackson</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vo Jackson</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVoJackson(VoJackson object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Property Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Property Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePropertyDeclaration(PropertyDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mapping</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mapping</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMapping(Mapping object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model To VO Mapping</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model To VO Mapping</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModelToVOMapping(ModelToVOMapping object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DTO To Model Mapping</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DTO To Model Mapping</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDTOToModelMapping(DTOToModelMapping object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mapping Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mapping Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMappingRule(MappingRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseType(Type object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Simple Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Simple Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSimpleType(SimpleType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Normal Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Normal Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNormalType(NormalType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Generic Data Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Generic Data Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGenericDataType(GenericDataType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Array Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Array Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseArrayType(ArrayType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //GenoMateSwitch
