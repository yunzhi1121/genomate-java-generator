/**
 * generated by Xtext 2.38.0
 */
package com.yunzhi.genoMate.impl;

import com.yunzhi.genoMate.DtoAddField;
import com.yunzhi.genoMate.DtoDefinition;
import com.yunzhi.genoMate.Exclusions;
import com.yunzhi.genoMate.FieldValidationBlock;
import com.yunzhi.genoMate.GenoMatePackage;
import com.yunzhi.genoMate.LombokAnnotation;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dto Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.yunzhi.genoMate.impl.DtoDefinitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.DtoDefinitionImpl#getSerializable <em>Serializable</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.DtoDefinitionImpl#getLombokAnnotation <em>Lombok Annotation</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.DtoDefinitionImpl#getExclusions <em>Exclusions</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.DtoDefinitionImpl#getExcludeAll <em>Exclude All</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.DtoDefinitionImpl#getFieldAnnotationsBlock <em>Field Annotations Block</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.DtoDefinitionImpl#getAddField <em>Add Field</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DtoDefinitionImpl extends MinimalEObjectImpl.Container implements DtoDefinition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getSerializable() <em>Serializable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSerializable()
   * @generated
   * @ordered
   */
  protected static final String SERIALIZABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSerializable() <em>Serializable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSerializable()
   * @generated
   * @ordered
   */
  protected String serializable = SERIALIZABLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getLombokAnnotation() <em>Lombok Annotation</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLombokAnnotation()
   * @generated
   * @ordered
   */
  protected EList<LombokAnnotation> lombokAnnotation;

  /**
   * The cached value of the '{@link #getExclusions() <em>Exclusions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExclusions()
   * @generated
   * @ordered
   */
  protected EList<Exclusions> exclusions;

  /**
   * The default value of the '{@link #getExcludeAll() <em>Exclude All</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExcludeAll()
   * @generated
   * @ordered
   */
  protected static final String EXCLUDE_ALL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExcludeAll() <em>Exclude All</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExcludeAll()
   * @generated
   * @ordered
   */
  protected String excludeAll = EXCLUDE_ALL_EDEFAULT;

  /**
   * The cached value of the '{@link #getFieldAnnotationsBlock() <em>Field Annotations Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldAnnotationsBlock()
   * @generated
   * @ordered
   */
  protected FieldValidationBlock fieldAnnotationsBlock;

  /**
   * The cached value of the '{@link #getAddField() <em>Add Field</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAddField()
   * @generated
   * @ordered
   */
  protected EList<DtoAddField> addField;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DtoDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GenoMatePackage.Literals.DTO_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GenoMatePackage.DTO_DEFINITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSerializable()
  {
    return serializable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSerializable(String newSerializable)
  {
    String oldSerializable = serializable;
    serializable = newSerializable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GenoMatePackage.DTO_DEFINITION__SERIALIZABLE, oldSerializable, serializable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LombokAnnotation> getLombokAnnotation()
  {
    if (lombokAnnotation == null)
    {
      lombokAnnotation = new EObjectContainmentEList<LombokAnnotation>(LombokAnnotation.class, this, GenoMatePackage.DTO_DEFINITION__LOMBOK_ANNOTATION);
    }
    return lombokAnnotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Exclusions> getExclusions()
  {
    if (exclusions == null)
    {
      exclusions = new EObjectContainmentEList<Exclusions>(Exclusions.class, this, GenoMatePackage.DTO_DEFINITION__EXCLUSIONS);
    }
    return exclusions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExcludeAll()
  {
    return excludeAll;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExcludeAll(String newExcludeAll)
  {
    String oldExcludeAll = excludeAll;
    excludeAll = newExcludeAll;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GenoMatePackage.DTO_DEFINITION__EXCLUDE_ALL, oldExcludeAll, excludeAll));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FieldValidationBlock getFieldAnnotationsBlock()
  {
    return fieldAnnotationsBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFieldAnnotationsBlock(FieldValidationBlock newFieldAnnotationsBlock, NotificationChain msgs)
  {
    FieldValidationBlock oldFieldAnnotationsBlock = fieldAnnotationsBlock;
    fieldAnnotationsBlock = newFieldAnnotationsBlock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK, oldFieldAnnotationsBlock, newFieldAnnotationsBlock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFieldAnnotationsBlock(FieldValidationBlock newFieldAnnotationsBlock)
  {
    if (newFieldAnnotationsBlock != fieldAnnotationsBlock)
    {
      NotificationChain msgs = null;
      if (fieldAnnotationsBlock != null)
        msgs = ((InternalEObject)fieldAnnotationsBlock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK, null, msgs);
      if (newFieldAnnotationsBlock != null)
        msgs = ((InternalEObject)newFieldAnnotationsBlock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK, null, msgs);
      msgs = basicSetFieldAnnotationsBlock(newFieldAnnotationsBlock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK, newFieldAnnotationsBlock, newFieldAnnotationsBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DtoAddField> getAddField()
  {
    if (addField == null)
    {
      addField = new EObjectContainmentEList<DtoAddField>(DtoAddField.class, this, GenoMatePackage.DTO_DEFINITION__ADD_FIELD);
    }
    return addField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GenoMatePackage.DTO_DEFINITION__LOMBOK_ANNOTATION:
        return ((InternalEList<?>)getLombokAnnotation()).basicRemove(otherEnd, msgs);
      case GenoMatePackage.DTO_DEFINITION__EXCLUSIONS:
        return ((InternalEList<?>)getExclusions()).basicRemove(otherEnd, msgs);
      case GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK:
        return basicSetFieldAnnotationsBlock(null, msgs);
      case GenoMatePackage.DTO_DEFINITION__ADD_FIELD:
        return ((InternalEList<?>)getAddField()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GenoMatePackage.DTO_DEFINITION__NAME:
        return getName();
      case GenoMatePackage.DTO_DEFINITION__SERIALIZABLE:
        return getSerializable();
      case GenoMatePackage.DTO_DEFINITION__LOMBOK_ANNOTATION:
        return getLombokAnnotation();
      case GenoMatePackage.DTO_DEFINITION__EXCLUSIONS:
        return getExclusions();
      case GenoMatePackage.DTO_DEFINITION__EXCLUDE_ALL:
        return getExcludeAll();
      case GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK:
        return getFieldAnnotationsBlock();
      case GenoMatePackage.DTO_DEFINITION__ADD_FIELD:
        return getAddField();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GenoMatePackage.DTO_DEFINITION__NAME:
        setName((String)newValue);
        return;
      case GenoMatePackage.DTO_DEFINITION__SERIALIZABLE:
        setSerializable((String)newValue);
        return;
      case GenoMatePackage.DTO_DEFINITION__LOMBOK_ANNOTATION:
        getLombokAnnotation().clear();
        getLombokAnnotation().addAll((Collection<? extends LombokAnnotation>)newValue);
        return;
      case GenoMatePackage.DTO_DEFINITION__EXCLUSIONS:
        getExclusions().clear();
        getExclusions().addAll((Collection<? extends Exclusions>)newValue);
        return;
      case GenoMatePackage.DTO_DEFINITION__EXCLUDE_ALL:
        setExcludeAll((String)newValue);
        return;
      case GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK:
        setFieldAnnotationsBlock((FieldValidationBlock)newValue);
        return;
      case GenoMatePackage.DTO_DEFINITION__ADD_FIELD:
        getAddField().clear();
        getAddField().addAll((Collection<? extends DtoAddField>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GenoMatePackage.DTO_DEFINITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GenoMatePackage.DTO_DEFINITION__SERIALIZABLE:
        setSerializable(SERIALIZABLE_EDEFAULT);
        return;
      case GenoMatePackage.DTO_DEFINITION__LOMBOK_ANNOTATION:
        getLombokAnnotation().clear();
        return;
      case GenoMatePackage.DTO_DEFINITION__EXCLUSIONS:
        getExclusions().clear();
        return;
      case GenoMatePackage.DTO_DEFINITION__EXCLUDE_ALL:
        setExcludeAll(EXCLUDE_ALL_EDEFAULT);
        return;
      case GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK:
        setFieldAnnotationsBlock((FieldValidationBlock)null);
        return;
      case GenoMatePackage.DTO_DEFINITION__ADD_FIELD:
        getAddField().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GenoMatePackage.DTO_DEFINITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GenoMatePackage.DTO_DEFINITION__SERIALIZABLE:
        return SERIALIZABLE_EDEFAULT == null ? serializable != null : !SERIALIZABLE_EDEFAULT.equals(serializable);
      case GenoMatePackage.DTO_DEFINITION__LOMBOK_ANNOTATION:
        return lombokAnnotation != null && !lombokAnnotation.isEmpty();
      case GenoMatePackage.DTO_DEFINITION__EXCLUSIONS:
        return exclusions != null && !exclusions.isEmpty();
      case GenoMatePackage.DTO_DEFINITION__EXCLUDE_ALL:
        return EXCLUDE_ALL_EDEFAULT == null ? excludeAll != null : !EXCLUDE_ALL_EDEFAULT.equals(excludeAll);
      case GenoMatePackage.DTO_DEFINITION__FIELD_ANNOTATIONS_BLOCK:
        return fieldAnnotationsBlock != null;
      case GenoMatePackage.DTO_DEFINITION__ADD_FIELD:
        return addField != null && !addField.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", serializable: ");
    result.append(serializable);
    result.append(", excludeAll: ");
    result.append(excludeAll);
    result.append(')');
    return result.toString();
  }

} //DtoDefinitionImpl
