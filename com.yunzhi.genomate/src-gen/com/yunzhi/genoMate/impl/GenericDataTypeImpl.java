/**
 * generated by Xtext 2.38.0
 */
package com.yunzhi.genoMate.impl;

import com.yunzhi.genoMate.GenericDataType;
import com.yunzhi.genoMate.GenoMatePackage;
import com.yunzhi.genoMate.Type;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Generic Data Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.yunzhi.genoMate.impl.GenericDataTypeImpl#getContainerTypeName <em>Container Type Name</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.GenericDataTypeImpl#getContainedTypeName <em>Contained Type Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GenericDataTypeImpl extends TypeImpl implements GenericDataType
{
  /**
   * The default value of the '{@link #getContainerTypeName() <em>Container Type Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainerTypeName()
   * @generated
   * @ordered
   */
  protected static final String CONTAINER_TYPE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContainerTypeName() <em>Container Type Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainerTypeName()
   * @generated
   * @ordered
   */
  protected String containerTypeName = CONTAINER_TYPE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getContainedTypeName() <em>Contained Type Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainedTypeName()
   * @generated
   * @ordered
   */
  protected Type containedTypeName;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GenericDataTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GenoMatePackage.Literals.GENERIC_DATA_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContainerTypeName()
  {
    return containerTypeName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContainerTypeName(String newContainerTypeName)
  {
    String oldContainerTypeName = containerTypeName;
    containerTypeName = newContainerTypeName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GenoMatePackage.GENERIC_DATA_TYPE__CONTAINER_TYPE_NAME, oldContainerTypeName, containerTypeName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type getContainedTypeName()
  {
    return containedTypeName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContainedTypeName(Type newContainedTypeName, NotificationChain msgs)
  {
    Type oldContainedTypeName = containedTypeName;
    containedTypeName = newContainedTypeName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME, oldContainedTypeName, newContainedTypeName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContainedTypeName(Type newContainedTypeName)
  {
    if (newContainedTypeName != containedTypeName)
    {
      NotificationChain msgs = null;
      if (containedTypeName != null)
        msgs = ((InternalEObject)containedTypeName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME, null, msgs);
      if (newContainedTypeName != null)
        msgs = ((InternalEObject)newContainedTypeName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME, null, msgs);
      msgs = basicSetContainedTypeName(newContainedTypeName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME, newContainedTypeName, newContainedTypeName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME:
        return basicSetContainedTypeName(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINER_TYPE_NAME:
        return getContainerTypeName();
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME:
        return getContainedTypeName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINER_TYPE_NAME:
        setContainerTypeName((String)newValue);
        return;
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME:
        setContainedTypeName((Type)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINER_TYPE_NAME:
        setContainerTypeName(CONTAINER_TYPE_NAME_EDEFAULT);
        return;
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME:
        setContainedTypeName((Type)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINER_TYPE_NAME:
        return CONTAINER_TYPE_NAME_EDEFAULT == null ? containerTypeName != null : !CONTAINER_TYPE_NAME_EDEFAULT.equals(containerTypeName);
      case GenoMatePackage.GENERIC_DATA_TYPE__CONTAINED_TYPE_NAME:
        return containedTypeName != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (containerTypeName: ");
    result.append(containerTypeName);
    result.append(')');
    return result.toString();
  }

} //GenericDataTypeImpl
