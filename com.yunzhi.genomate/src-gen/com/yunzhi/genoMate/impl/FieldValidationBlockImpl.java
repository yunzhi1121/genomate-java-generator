/**
 * generated by Xtext 2.38.0
 */
package com.yunzhi.genoMate.impl;

import com.yunzhi.genoMate.FieldValidationBlock;
import com.yunzhi.genoMate.GenoMatePackage;
import com.yunzhi.genoMate.GlobalAction;
import com.yunzhi.genoMate.LocalLoopAction;
import com.yunzhi.genoMate.SingleAction;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Field Validation Block</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.yunzhi.genoMate.impl.FieldValidationBlockImpl#getActionGlobal <em>Action Global</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.FieldValidationBlockImpl#getActionLocal <em>Action Local</em>}</li>
 *   <li>{@link com.yunzhi.genoMate.impl.FieldValidationBlockImpl#getActionSingle <em>Action Single</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FieldValidationBlockImpl extends MinimalEObjectImpl.Container implements FieldValidationBlock
{
  /**
   * The cached value of the '{@link #getActionGlobal() <em>Action Global</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActionGlobal()
   * @generated
   * @ordered
   */
  protected EList<GlobalAction> actionGlobal;

  /**
   * The cached value of the '{@link #getActionLocal() <em>Action Local</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActionLocal()
   * @generated
   * @ordered
   */
  protected EList<LocalLoopAction> actionLocal;

  /**
   * The cached value of the '{@link #getActionSingle() <em>Action Single</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActionSingle()
   * @generated
   * @ordered
   */
  protected SingleAction actionSingle;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FieldValidationBlockImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GenoMatePackage.Literals.FIELD_VALIDATION_BLOCK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<GlobalAction> getActionGlobal()
  {
    if (actionGlobal == null)
    {
      actionGlobal = new EObjectContainmentEList<GlobalAction>(GlobalAction.class, this, GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_GLOBAL);
    }
    return actionGlobal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LocalLoopAction> getActionLocal()
  {
    if (actionLocal == null)
    {
      actionLocal = new EObjectContainmentEList<LocalLoopAction>(LocalLoopAction.class, this, GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_LOCAL);
    }
    return actionLocal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SingleAction getActionSingle()
  {
    return actionSingle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetActionSingle(SingleAction newActionSingle, NotificationChain msgs)
  {
    SingleAction oldActionSingle = actionSingle;
    actionSingle = newActionSingle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE, oldActionSingle, newActionSingle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActionSingle(SingleAction newActionSingle)
  {
    if (newActionSingle != actionSingle)
    {
      NotificationChain msgs = null;
      if (actionSingle != null)
        msgs = ((InternalEObject)actionSingle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE, null, msgs);
      if (newActionSingle != null)
        msgs = ((InternalEObject)newActionSingle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE, null, msgs);
      msgs = basicSetActionSingle(newActionSingle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE, newActionSingle, newActionSingle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_GLOBAL:
        return ((InternalEList<?>)getActionGlobal()).basicRemove(otherEnd, msgs);
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_LOCAL:
        return ((InternalEList<?>)getActionLocal()).basicRemove(otherEnd, msgs);
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE:
        return basicSetActionSingle(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_GLOBAL:
        return getActionGlobal();
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_LOCAL:
        return getActionLocal();
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE:
        return getActionSingle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_GLOBAL:
        getActionGlobal().clear();
        getActionGlobal().addAll((Collection<? extends GlobalAction>)newValue);
        return;
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_LOCAL:
        getActionLocal().clear();
        getActionLocal().addAll((Collection<? extends LocalLoopAction>)newValue);
        return;
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE:
        setActionSingle((SingleAction)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_GLOBAL:
        getActionGlobal().clear();
        return;
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_LOCAL:
        getActionLocal().clear();
        return;
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE:
        setActionSingle((SingleAction)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_GLOBAL:
        return actionGlobal != null && !actionGlobal.isEmpty();
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_LOCAL:
        return actionLocal != null && !actionLocal.isEmpty();
      case GenoMatePackage.FIELD_VALIDATION_BLOCK__ACTION_SINGLE:
        return actionSingle != null;
    }
    return super.eIsSet(featureID);
  }

} //FieldValidationBlockImpl
